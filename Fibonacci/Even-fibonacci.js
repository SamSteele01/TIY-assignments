// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed 4 million, find the sum of the even-valued terms.

// Initialize with:
// 0th term = 1
// 1st term = 1
// create next term and use
// next = 0th + 1st
//   return next
// update
// 0th = 1st
// 1st = next

function fibonacciNumbers(max_value) {
  let first = 1;
  let second = 1;
  // let current_Num = 0;
  let fibNum_even_Sum = 0;
  let cutoff = true;
  let next = 0;
while (cutoff) {
    next = first + second;
    // current_Num = second;
    // console.log(second);
    if (second % 2 === 0) {
      fibNum_even_Sum += second;
    }
    if (second >= max_value) {
      cutoff = false;
    }
    first = second;
    second = next;
  }
  return fibNum_even_Sum;
}
console.log(fibonacciNumbers(4000000));
